// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int            @id @default(autoincrement())
  email      String         @unique
  password   String
  username   String         @unique
  avatar     String?
  role       Role           @default(USER)
  coins      Int            @default(0)
  isDeleted  Boolean        @default(false)
  items      ItemInstance[] // 1-to-many-relatinship
  UserInRoom UserInRoom[]
}

model ItemDefinition {
  id            Int          @id @default(autoincrement())
  name          String
  description   String?
  category      ItemCategory
  // 
  price         Int
  imageUrl      String?
  // 
  canBePlaced   Boolean      @default(false)
  canBeConsumed Boolean      @default(false)
  canBeSatOn    Boolean      @default(false)

  isSolid   Boolean?
  rarity    ItemRarity     @default(COMMON)
  // 
  createdAt DateTime       @default(now())
  items     ItemInstance[]
  effects   Effect[]
  // 
  isDeleted Boolean        @default(false)
}

enum ItemCategory {
  FURNITURE // chairs, tables, sofas
  DECORATION // plants, lights, art
  FOOD // consumables
  BOOSTER // speed boost, jump boost, etc
  STRUCTURE // walls, floors, doors
  PORTAL // game teleporters
  INTERACTIVE // crafting benches, storage boxes etc
}

model ItemInstance {
  id           Int            @id @default(autoincrement())
  user         User           @relation(fields: [userId], references: [id])
  userId       Int
  // 
  definition   ItemDefinition @relation(fields: [definitionId], references: [id])
  definitionId Int
  // 
  x            Int?
  y            Int?
  stackCount   Int            @default(1)
  isEquipped   Boolean?       @default(false)
  isPlaced     Boolean?       @default(false)
  // 
  createdAt    DateTime       @default(now())
  ownedAt      DateTime       @default(now())
}

model Effect {
  id        Int            @id @default(autoincrement())
  type      EffectType
  amount    Int
  duration  Int? // seconds
  // 
  item      ItemDefinition @relation(fields: [itemId], references: [id])
  itemId    Int
  // 
  isDeleted Boolean        @default(false)
}

enum EffectType {
  SPEED
  JUMP
  HEAL
  DAMAGE
  DEFENSE
  INVISIBILITY
}

enum ItemRarity {
  COMMON
  RARE
  EPIC
  LEGENDARY
}

model Room {
  id          Int          @id @default(autoincrement())
  name        String
  description String?
  x           Int // coordinates for left top corner
  y           Int
  xlen        Int
  ylen        Int
  isPublic    Boolean      @default(true)
  createdAt   DateTime     @default(now())
  isDeleted   Boolean      @default(false)
  // relations
  users       UserInRoom[]
}

model UserInRoom {
  id       Int      @id @default(autoincrement())
  userId   Int
  roomId   Int
  x        Int      @default(0)
  y        Int      @default(0)
  team     String?
  isMuted  Boolean  @default(false)
  joinedAt DateTime @default(now())
  // relations
  user     User     @relation(fields: [userId], references: [id])
  room     Room     @relation(fields: [roomId], references: [id])

  @@unique([userId, roomId])
}

enum Role {
  USER
  ADMIN
}
